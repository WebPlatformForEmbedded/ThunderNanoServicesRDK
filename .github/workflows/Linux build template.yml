name: Linux build template

on:
  workflow_call:

jobs:
  ThunderNanoServicesRDK:

    runs-on: ubuntu-24.04

    strategy:
      matrix:
        build_type: [Debug, Release, MinSizeRel]
        architecture: [32, 64]

    name: Build type - ${{matrix.build_type}}${{matrix.architecture == '32' && ' x86' || ''}}
    steps:
# --------- Packages install & artifacts download ---------
    - name: Install necessary packages
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 10
        command: |
          sudo gem install apt-spy2
          sudo apt-spy2 fix --commit --launchpad --country=US
          echo "deb http://archive.ubuntu.com/ubuntu/ jammy main universe restricted multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb http://archive.ubuntu.com/ubuntu/ jammy-updates main universe restricted multiverse" | sudo tee -a /etc/apt/sources.list
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt install python3-pip python3-venv build-essential cmake ninja-build libusb-1.0-0-dev autoconf automake libtool libtool-bin pkg-config ${{matrix.architecture == '32' && 'zlib1g-dev:i386 libssl-dev:i386 gcc-13-multilib g++-13-multilib libarchive-dev:i386 libcurl4-openssl-dev:i386 libgpgme-dev:i386 libgpg-error-dev:i386 libgstreamer1.0-dev:i386' || 'zlib1g-dev libssl-dev libarchive-dev libcurl4-openssl-dev libgpgme-dev libgpg-error-dev libgstreamer1.0-dev'}}
          python3 -m venv venv
          source venv/bin/activate
          pip install jsonref

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ThunderInterfaces-${{matrix.build_type}}${{matrix.architecture == '32' && '_x86' || ''}}-artifact
        path: ${{matrix.build_type}}

    - name: Unpack files
      run: |
        tar -xvzf ${{matrix.build_type}}/${{matrix.build_type}}${{matrix.architecture == '32' && '_x86' || ''}}.tar.gz
        rm ${{matrix.build_type}}/${{matrix.build_type}}${{matrix.architecture == '32' && '_x86' || ''}}.tar.gz

# ----- Checkout & Options regex -----
    - name: Checkout ThunderNanoServicesRDK
      uses: actions/checkout@v4
      with:
        path: ThunderNanoServicesRDK
        repository: WebPlatformForEmbedded/ThunderNanoServicesRDK

    - name: Regex ThunderNanoServicesRDK
      if: contains(github.event.pull_request.body, '[Options:')
      id: plugins
      uses: AsasInnab/regex-action@v1
      with:
        regex_pattern: '(?<=\[Options:).*(?=\])'
        regex_flags: 'gim'
        search_string: ${{github.event.pull_request.body}}

    - name: Checkout libopkg
      uses: actions/checkout@v4
      with:
        path: opkg
        repository: oe-mirrors/opkg

# ----- Build & upload artifacts -----
    - name: Build libopkg
      run: |
        export PKG_CONFIG_PATH=/usr/lib/${{matrix.architecture == '32' && 'i386' || 'x86_64'}}-linux-gnu/pkgconfig:$PKG_CONFIG_PATH
        cd opkg
        ./autogen.sh || true
        ./configure --prefix=/usr/local ${{matrix.architecture == '32' && 'CFLAGS="-m32" LDFLAGS="-m32"' || ''}}
        make
        sudo make install

    - name: Install libopkg headers
      run: |
        sudo mkdir -p /usr/local/include/libopkg
        sudo cp $GITHUB_WORKSPACE/opkg/libopkg/*.h /usr/local/include/libopkg

    - name: Build ThunderNanoServicesRDK
      run: |
        source venv/bin/activate
        export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/${{matrix.architecture == '32' && 'i386' || 'x86_64'}}-linux-gnu/pkgconfig:$PKG_CONFIG_PATH
        cmake -G Ninja -S ThunderNanoServicesRDK -B ${{matrix.build_type}}/build/ThunderNanoServicesRDK \
        -DCMAKE_CXX_FLAGS="-Wall -Wextra -Wpedantic -Werror -m${{matrix.architecture}}" \
        -DCMAKE_C_FLAGS="-Wall -Wextra -Wpedantic -Werror -m${{matrix.architecture}}" \
        -DCMAKE_INSTALL_PREFIX="${{matrix.build_type}}/install/usr" \
        -DCMAKE_MODULE_PATH="${PWD}/${{matrix.build_type}}/install/usr/include/WPEFramework/Modules" \
        -DPLUGIN_DEVICEIDENTIFICATION=ON \
        -DPLUGIN_DEVICEINFO=ON \
        -DPLUGIN_LOCATIONSYNC=ON \
        -DPLUGIN_MESSAGECONTROL=ON \
        -DPLUGIN_MESSENGER=ON \
        -DPLUGIN_MONITOR=ON \
        -DPLUGIN_OPENCDMI=ON \
        -DPLUGIN_PERFORMANCEMETRICS=ON \
        -DPLUGIN_PLAYERINFO=ON \
        -DPLUGIN_PACKAGER=ON \
        ${{steps.plugins.outputs.first_match}}
        cmake --build ${{matrix.build_type}}/build/ThunderNanoServicesRDK --target install

    - name: Tar files
      run: tar -czvf ${{matrix.build_type}}${{matrix.architecture == '32' && '_x86' || ''}}.tar.gz ${{matrix.build_type}}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ThunderNanoServicesRDK-${{matrix.build_type}}${{matrix.architecture == '32' && '_x86' || ''}}-artifact
        path: ${{matrix.build_type}}${{matrix.architecture == '32' && '_x86' || ''}}.tar.gz
